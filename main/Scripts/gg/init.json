{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "init",
    "packageName": null,
    "script": "gg = gg or {}\ngg.ui = gg.ui or {}\ngg.ui.refreshInterval = .1\ngg.ui.availColor = \"cyan\"\ngg.ui.infoColor = \"white\"\ngg.ui.offColor = \"grey\"\ngg.ui.roomColor = \"DarkOrange\"\n\ngg.self = gg.self or {}\ngg.target = gg.target or {}\ngg.time = gg.time or {}\ngg.who = gg.who or {}\n\ngg.self.buffs = gg.self.buffs or {}\ngg.self.debuffs = gg.self.debuffs or {}\ngg.self.inv = gg.self.inv or {}\ngg.self.room = gg.self.room or {}\ngg.self.room.contents = gg.self.room.contents or {}\ngg.self.room.players = gg.self.room.players or {}\ngg.self.skills = gg.self.skills or {}\ngg.self.vitals = gg.self.vitals or {}\n\ngg.target.buffs = gg.target.buffs or {}\ngg.target.debuffs = gg.target.debuffs or {}\n\nlocal self = gg.self\nlocal target = gg.target\n\nlocal room = self.room\n\nlocal itemAttribMap = {\n    w = \"worn items\", W = \"wearable items\", l = \"wielded\",\n    g = \"groupable\", c = \"containers\", t = \"takeables\",\n    m = \"mobs\", d = \"corpses\", x = \"friendlies\", u = \"unknown items\"\n}\n\nself.bleeding = function() return Vitals.bleeding ~= \"0\" end\nself.blind = function() return Vitals.blind == \"1\" end\nself.can_eat = function() return Vitals.herb == \"1\" end\nself.can_focus = function() return Vitals.focus == \"1\" end\nself.can_moss = function() return Vitals.moss == \"1\" end\nself.can_renew = function() return Vitals.renew == \"1\" end\nself.can_salve = function() return Vitals.salve == \"1\" end\nself.can_sip = function() return Vitals.elixir == \"1\" end\nself.can_smoke = function() return Vitals.pipe == \"1\" end\nself.can_tree = function() return Vitals.tree == \"1\" end\nself.cloaked = function() return Vitals.cloak == \"1\" end\nself.deaf = function() return Vitals.deaf == \"1\" end\nself.fallen = function() return Vitals.fallen ~= \"0\" end\nself.fangbarrier = function() return Vitals.fangbarrier ~= \"0\" end\nself.has_ability_balance = function() return Vitals.ability_bal == \"1\" end\nself.has_balance = function() return Vitals.balance == \"1\" end\nself.has_equilibrium = function() return Vitals.equilibrium == \"1\" end\nself.has_left_arm = function() return Vitals.left_arm == \"1\" end\nself.has_right_arm = function() return Vitals.right_arm == \"1\" end\nself.mad = function() return Vitals.madness == \"1\" end\nself.mounted = function() return Vitals.mounted == \"1\" end\nself.phased = function() return Vitals.phased == \"1\" end\nself.prone = function() return Vitals.prone == \"1\" end\nself.writhing = function() return Vitals.writhing == \"1\" end\n\nself.build = function() return Status.spec ..\" \".. Status.race ..\" \".. Status.class end\nself.gold = function() return {banked = tonumber(Status.bank), held = tonumber(Status.gold)} end\nself.stats = {\n    hp = function() return (tonumber(Vitals.hp) / tonumber(Vitals.maxhp)) * 100 end,\n    mp = function() return (tonumber(Vitals.mp) / tonumber(Vitals.maxmp)) * 100 end,\n    ep = function() return (tonumber(Vitals.ep) / tonumber(Vitals.maxep)) * 100 end,\n    wp = function() return (tonumber(Vitals.wp) / tonumber(Vitals.maxwp)) * 100 end,\n    blood = function() return tonumber(Vitals.blood) end,\n    to_next_level = function() return tonumber(Vitals.nl) end\n}\nself.wielding = {\n    left = function() return Vitals.wield_left end,\n    right = function() return Vitals.wield_right end\n}",
    "eventHandlerList": null
}